;;; -*- Syntax: Ansi-Common-Lisp; Base: 10; Mode: lisp; Package: :cl-user; -*- 
(kb has (superclasses (standard-class))
           (broader ((a  Thing)))
           (related_slot ((a  Thing)))
           (cui ((a  Thing)))
           (synonym ((a  Thing)))
           (narrower ((a  Thing)))
           (semantic_type ((a  Thing)))
	   )
(clinical_statement_attribute has (superclasses (standard-slot)))
(clinical_statement_template has (superclasses (user))
           (original_text ((a  Thing)))
           (reference_file ((a  Thing)))
           (reference_number ((a  Thing)))
	   )
(simple_clinical_statement has (superclasses (clinical_statement_template))
           (effective_time ((a  Thing)))
           (mood ((a  Thing)))
	   )
(assessment has (superclasses (simple_clinical_statement))
           (noun_phrase ((a  Thing)))
           (value ((a  Thing)))
	   )
(intervention_statement has (superclasses (simple_clinical_statement))
           (noun_phrase ((a  Thing)))
           (status ((a  Thing)))
	   )
(behavior_statement has (superclasses (simple_clinical_statement))
           (noun_phrase ((a  Thing)))
           (value ((a  Thing)))
	   )
(complex_clinical_statement has (superclasses (clinical_statement_template)))
(compound_statement has (superclasses (complex_clinical_statement))
           (statement_connector ((a  Thing)))
           (statements ((a  Thing)))
	   )
(comparison_statement has (superclasses (complex_clinical_statement))
           (expression_comparison ((a  Thing)))
           (first_expression ((a  Thing)))
           (second_expression ((a  Thing)))
	   )
(semantic_connection_statement has (superclasses (complex_clinical_statement))
           (first_statement ((a  Thing)))
           (second_statement ((a  Thing)))
           (semantic_connector ((a  Thing)))
	   )
(expression has (superclasses (user)))
(nounphrase has (superclasses (expression)))
(primitive_nounphrase has (superclasses (nounphrase))
           (preferred_name ((a  Thing)))
           (code ((a  Thing)))
	   )
(logicalcombination_nounphrase has (superclasses (nounphrase))
           (Modifier_term ((a  Thing)))
           (root_concept ((a  Thing)))
	   )
(negated_nounphrase has (superclasses (logicalcombination_nounphrase))
           (Modifier_term ((a  Thing)))
	   )
(andor_nounphrase has (superclasses (logicalcombination_nounphrase))
           (second_concept ((a  Thing)))
           (Modifier_term ((a  Thing)))
	   )
(modified_nounphrase has (superclasses (nounphrase))
           (binary_Modifier ((a  Thing)))
           (unary_Modifier ((a  Thing)))
           (root_concept ((a  Thing)))
	   )
(data_value has (superclasses (expression)))
(quantity has (superclasses (data_value)))
(physical_quantity has (superclasses (quantity))
           (unit ((a  Thing)))
           (realvalue ((a  Thing)))
	   )
(duration has (superclasses (physical_quantity)))
(time_entity has (superclasses (data_value)))
(time_point has (superclasses (time_entity))
           (literal ((a  Thing)))
	   )
(time_interval has (superclasses (time_entity))
           (start_time ((a  Thing)))
           (stop_time ((a  Thing)))
	   )
(relative_time_interval has (superclasses (time_interval))
           (reference_time ((a  Thing)))
           (duration ((a  Thing)))
	   )
(assessed_value has (superclasses (data_value))
           (preferred_name ((a  Thing)))
           (code ((a  Thing)))
	   )
(yes__no has (superclasses (assessed_value)))
(present__absent has (superclasses (assessed_value)))
(suspected has (superclasses (assessed_value)))
(intervention_statuscode has (superclasses (data_value))
           (preferred_name ((a  Thing)))
           (code_system ((a  Thing)))
           (code ((a  Thing)))
	   )
(done__not_done has (superclasses (intervention_statuscode)))
(query has (superclasses (expression))
           (aggregation_term ((a  Thing)))
           (selected_attribute ((a  Thing)))
           (clinical_statement_template ((a  Thing)))
	   )
(variable has (superclasses (expression))
           (variable_name ((a  Thing)))
           (derivation_expression ((a  Thing)))
	   )
(constraint_ has (superclasses (expression)))
(singlevalue_constraint_ has (superclasses (constraint_))
           (lower_bound ((a  Thing)))
           (upper_bound ((a  Thing)))
	   )
(timeinterval_constraint_ has (superclasses (constraint_)))
(timeinterval_compound_constraint_ has (superclasses (timeinterval_constraint_))
           (logical_connector ((a  Thing)))
           (timeinterval_constraint_s ((a  Thing)))
	   )
(timeinterval_comparison_constraint_ has (superclasses (timeinterval_constraint_))
           (interval ((a  Thing)))
           (time_interval_comparator ((a  Thing)))
	   )
(duration_constraint_ has (superclasses (timeinterval_constraint_))
           (expression_comparison ((a  Thing)))
           (duration ((a  Thing)))
	   )
(Modifier has (superclasses (user)))
(binary_Modifier has (superclasses (Modifier))
           (Modifier_term ((a  Thing)))
           (root_concept ((a  Thing)))
	   )
(unary_Modifier has (superclasses (Modifier))
           (preferred_name ((a  Thing)))
           (code ((a  Thing)))
	   )
(termcode has (superclasses (user))
           (preferred_name ((a  Thing)))
           (code_system ((a  Thing)))
           (code ((a  Thing)))
	   )
(statement_connector has (superclasses (termcode)))
(logical_connector has (superclasses (statement_connector)))
(semantic_connector has (superclasses (statement_connector)))
(expression_comparator has (superclasses (termcode)))
(aggregation_term has (superclasses (termcode)))
(Modifier_term has (superclasses (termcode)))
(relational_Modifier_term has (superclasses (Modifier_term)))
(negation_term has (superclasses (Modifier_term)))
(andor_term has (superclasses (Modifier_term)))
(unit has (superclasses (termcode)))
(mood_code has (superclasses (termcode)))
(time_interval_comparator has (superclasses (termcode)))
(protocol has (superclasses (user))
           (title ((a  Thing)))
           (eligibility_criteria ((a  Thing)))
	   )
(kb_root has (superclasses (user))
           (broader ((a  Thing)))
           (related_slot ((a  Thing)))
           (cui ((a  Thing)))
           (synonym ((a  Thing)))
           (name_ ((a  Thing)))
           (narrower ((a  Thing)))
           (documentation ((a  Thing)))
           (semantic_type ((a  Thing)))
	   )
